scalar DateTime
scalar Duration

enum TaskMutation {
    CREATED
    UPDATED
    DELETED
}

type TaskSubscriptionPayload {
    mutation: TaskMutation!
    task: Task!
}

type Task {
    id: ID!
    name: String!
    date: DateTime!
    complete: Boolean!
    notes: String,
    timeAllotment: Duration,
}

type Query {
    tasks: [Task]
    tasksOnDay(day: DateTime!): [Task]
}

type Mutation {
    createTask(name: String!, date: DateTime!): Task!
    updateTask(id: ID!, name: String, date: DateTime, complete: Boolean, notes: String, timeAllotment: Duration): Task!
    deleteTask(id: ID!): Boolean!
}

type Subscription {
    taskData: TaskSubscriptionPayload!
}
